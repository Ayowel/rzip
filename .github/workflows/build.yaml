---
on:
  workflow_call:
    inputs:
      platforms:
        description: A JSON-formatted string array with the platforms on which the test should run
        default: '["windows-latest", "ubuntu-latest", "mac-latest"]'
        required: false
        type: string
      python_version:
        description: A JSON-formatted string with the python versions to use for the test
        default: '["3"]'
        required: false
        type: string
      pip_trusted_hosts:
        description: Additionnal options to pass to PIP at runtime
        default: ''
        required: false
        type: string
  workflow_dispatch:
    inputs:
      platforms:
        description: A JSON-formatted string array with the platforms on which the test should run
        default: '["windows-latest", "ubuntu-latest", "mac-latest"]'
        required: false
        type: string
      python_version:
        description: A JSON-formatted string array with the python versions to use for the test
        default: '["3"]'
        required: false
        type: string
      pip_trusted_hosts:
        description: Additionnal options to pass to PIP at runtime
        default: ''
        required: false
        type: string

jobs:
  build:
    runs-on: ${{ fromJson(inputs.platforms) }}
    strategy:
      fail-fast: false
      matrix:
        python_version: ${{ fromJson(inputs.python_version) }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}
        cache: 'pip'
      env:
        PIP_TRUSTED_HOST: ${{ inputs.pip_trusted_hosts }}
    - name: Install python dev requirements
      run: |
        pip install -r dev-requirements.txt
      env:
        PIP_TRUSTED_HOST: ${{ inputs.pip_trusted_hosts }}
    - name: Run linter
      run: python3 -m pylint src/repzip
    - name: Run test harnesses
      run: python3 -m pytest --cov-report xml
      env:
        PYTHONPATH: src
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        name: ${{ runner.name }}-${{ matrix.python_version }}
      continue-on-error: true
    - name: Build the package
      run: python3 -m build
      env:
        PIP_TRUSTED_HOST: ${{ inputs.pip_trusted_hosts }}
